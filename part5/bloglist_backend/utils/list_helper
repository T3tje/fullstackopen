const _ = require('lodash');
 
  const dummy = (blogs) => {
    return 1
}

const totalLikes = (blogs) => {
    if (blogs.length > 0) {
      const sumTotal = blogs.map(item => item.likes).reduce((a, b) => a + b)
      return sumTotal
    }
    return 0
}

const favoriteBlog = (list) => {
    const output = list.sort(function (a, b) {
      return b.likes - a.likes;
    });
    
    const returnedObject = {
      title: output[0].title,
      author: output[0].author,
      likes: output[0].likes
    }
    
   
    return returnedObject
}

const mostBlogs = (blogs) => {

  const authors = blogs.map(item => item.author)
  const toCount = _.countBy(authors)

  const currentAuthor = {
    author: '',
    blogs: 0
  }
  _.forEach(toCount, (value,key) => {
    if (value > currentAuthor.blogs) {
      currentAuthor.author = key
      currentAuthor.blogs = value
    }
  })
  return currentAuthor
}

const mostLikes = (blogs) => {
  const authors = blogs.map(blog => blog.author)
  const authorsSorted = _.uniq(authors)
  const authorsObject = _.zipObject(authorsSorted)
  
  blogs.forEach(item => {
    if (authorsObject[item.author]) {
      authorsObject[item.author] += item.likes 
    } else {
    authorsObject[item.author] = item.likes
    }
  })

  currentAuthor = {
    author: '',
    likes: 0
  }

  _.forEach(authorsObject, (value, key) => {
    if (value > currentAuthor.likes) {
      currentAuthor.author = key
      currentAuthor.likes = value
    }
  })

  return currentAuthor
}

module.exports = {
    dummy,
    totalLikes,
    favoriteBlog,
    mostBlogs,
    mostLikes
}